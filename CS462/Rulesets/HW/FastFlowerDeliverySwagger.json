swagger: "2.0"
info:
  description: "Fast Flower Delivery API"
  version: "1.0.0"
  title: "Swagger Petstore"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
- name: "pet"
  description: "Everything about your Pets"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /order:
    post:
      tags:
      - "order"
      summary: "Create a new delivery request"
      description: "Given a pick up address and time, and an optional deadline as well as a vendor name create a new order"
      operationId: "addOrder"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "JSON with vendor name, pick up address and pick up time all as strings"
        required: true
      responses:
        "405":
          description: "Invalid input"
      security:
      - flower_auth:
        - "write:orders"
        - "read:orders"
  /order/{orderID}:
    put:
      tags:
      - "order"
      summary: "Update an existing order"
      description: ""
      operationId: "updateOrder"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "JSON with a driverID or a delivered time"
        required: true
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Order not found"
        "405":
          description: "Invalid input"
      security:
      - flower_auth:
        - "write:orders"
        - "read:orders"
    get:
      tags:
      - "order"
      summary: "Find order by id"
      description: "Returns a single order record"
      operationId: "getOrderById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: "ID of order to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Order not found"
      security:
      - api_key: []
    delete:
      tags:
      - "order"
      summary: "Deletes an order"
      description: ""
      operationId: "deleteOrder"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: true
        type: "string"
      - name: "orderId"
        in: "path"
        description: "Order id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Order not found"
    /driver/{orderID}:
      put:
      tags:
      - "driver"
      summary: "Add an order to a randomly chosen driver's order list"
      description: "Given an orderID, add the order to a driver's order list"
      operationId: "setOrderRandom"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "path"
        name: "orderID"
        description: "Contains order ID"
        required: true
      responses:
        "405":
          description: "Invalid input"
    /driver/{driverID}/{orderID}:
    put:
    tags:
    - "driver"
    summary: "Add an order to a driver's order list"
    description: "Given a driverID and an orderID, add the order to the driver's order list"
    operationId: "setOrder"
    consumes:
    - "application/json"
    - "application/xml"
    produces:
    - "application/xml"
    - "application/json"
    parameters:
    - in: "path"
      name: "driverID"
      description: "Contains driver ID"
      required: true
    - in: "path"
      name: "orderID"
      description: "Contains order ID"
      required: true
    responses:
      "405":
        description: "Invalid input"
    /driver/{driverID}:
      put:
      tags:
      - "driver"
      summary: "Add an on-time order to a driver"
      description: "Given driver ID, add an on-time order to the driver"
      operationId: "addDriverOnTime"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "path"
        name: "driverID"
        description: "Contains driver name"
        required: true
      responses:
        "405":
          description: "Invalid input"
    /driver:
      post:
      tags:
      - "driver"
      summary: "Create a new driver"
      description: "Given driver name, make a new driver and return the driver ID"
      operationId: "addDriver"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Contains driver name"
        required: true
      responses:
        "405":
          description: "Invalid input"
  
    
definitions:
  Order:
    type: "object"
    required:
    - "id"
    - "address"
    - "pickUpTime"
    - "dropOffDeadline"
    properties:
      id:
        type: "integer"
        format: "int64"
      vendorName:
        type: "string"
      address:
        type: "string"
      pickUpTime:
        type: "string"
        format: "date-time"
      dropOffDeadline:
        type: "string"
        format: "date-time"
      assignedDriver: 
        type: "integer"
        defualt: 0
        format: "int64"
      deliveredTime:
        type: "string"
        defualt: ""
        format: "date-time"
    xml:
      name: "Order"
  Driver:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      ranking:
        type: "string"
        example: "4.2"
      totalOrdersDelivered:
        type: "integer"
        format: "int64"
      totalOrdersOnTime:
        type: "integer"
        format: "int64"
    xml:
      name: "Driver"